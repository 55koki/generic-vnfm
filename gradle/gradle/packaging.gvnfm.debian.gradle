/*
 * Copyright (c) 2015 Fraunhofer FOKUS. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    debianDistribution = (applicationRelease) ? "release" : "snapshot"
    debianApplicationVersionFull = "${applicationVersionFull}".replaceAll("-", ".")
    openbatonInstallDir = "/opt/openbaton"
}

task makedeb(type: Deb, dependsOn: [jar, build]) {
    packageName = (applicationRelease) ? "openbaton-gvnfm" : "openbaton-gvnfm-nightly"
    version = debianApplicationVersionFull
    //release = 1 
    priority = 'optional'
    arch = 'amd64'
    maintainer = 'Open Baton Team <info@open-baton.org>'
    vendor = 'Open Source (Implemented by Fraunhofer FOKUS and TUB)'
    license = 'Apache 2.0 License'
    url = 'http://openbaton.github.io/index.html'
    summary = 'Open Baton Generic VNF Manager (GVNFM)'
    packageDescription = 'The Generic Virtual Network Function Manager (GVNFM) is a component of the Open Baton project which is an ETSI compliant implementation of a NFV Management and Orchestration (MANO) System'

    postInstall file('gradle/gradle/scripts/debian/postinst')
    preUninstall file('gradle/gradle/scripts/debian/prerm')

    requires('openjdk-7-jre')
    requires('rabbitmq-server')

    // Copy files from "from path" to "into path"
    from('src/main/resources/application.properties')   { into '/etc/openbaton/gvnfm/'
            rename { String fileName -> fileName.replace("application.properties", "openbaton-gvnfm.properties") }   // properties file
    }
    from(jar.outputs.files) 				                         { into '/usr/lib/openbaton/gvnfm' }             // jar file
    from('gradle/gradle/scripts/openbaton-gvnfm') 	                 { into '/usr/bin/'}                             // executable to run the GVNFM
    from('gradle/gradle/scripts/openbaton-gvnfm') 	                 { into '/etc/init.d/'}                          // executable to run the GVNFM as a service (SysV)
    from('gradle/gradle/scripts/openbaton-gvnfm.conf') 	             { into '/etc/init/'}                            // conf file to run the GVNFM as a service (Upstart)
    from('gradle/gradle/scripts/systemd/openbaton-gvnfm.service')    { into '/usr/lib/systemd/system/'}              // executable to run the GVNFM as a service (Systemd)
    from('gradle/gradle/scripts/systemd/gvnfm.env')                  { into '/usr/lib/openbaton/systemd/'}           // environment file to run the GVNFM as a service (Systemd)
    from('gradle/gradle/scripts/systemd/gvnfm.preexecstart')         { into '/usr/lib/openbaton/systemd/'}           // preexecstart file to run the GVNFM as a service (Systemd)
}

