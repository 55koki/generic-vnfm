# Open Baton init script

description     "Open Baton GVNFM"
author          "Open Baton Team <info@open-baton.org>"

console output 
start on (started networking)
stop on shutdown
kill timeout 60 
respawn limit 5 60	
limit core unlimited unlimited

env INSTALL_DIR=/usr/lib/openbaton/gvnfm
env OPENBATON_GVNFM_CONFIG_FILE=/etc/openbaton/gvnfm/openbaton-gvnfm.properties
env TMP_FILE=/tmp/openbaton-gvnfm


# Check the env is ready to start Open Baton
pre-start script
	OSTYPE=$(uname)

	####################
	#### Open Baton ####
	####################

	# Check if the Open Baton Generic VNFM is already running
    instance=$(ps aux | grep -v grep | grep "generic-vnfm" | grep jar | wc -l)
    if [ ${instance} -ne 0 ]; then
        logger -is -t "$UPSTART_JOB" "The Open Baton Generic VNFM is already running .."
        exit 1
    fi
	# Select which Open Baton Generic VNFM version to start
	# TODO: so far the most recent openbaton-nfvo jar is chosen to be executed
    #       -> add alterntive version selection (with prompt question and/or with command line -v parameter)
    OPENBATON_GVNFM_JAR=$(ls -ct ${INSTALL_DIR} | grep "generic-vnfm" | grep jar | head -n 1)
	if [ ${OPENBATON_GVNFM_JAR} = "" ]; then
        logger -is -t "$UPSTART_JOB" "The Open Baton Generic VNFM is not installed. (jar-file not found)"
        exit 1
    fi
    echo "${OPENBATON_GVNFM_JAR}" > "${TMP_FILE}"


	###################
	#### Rabbitmq #####
	###################

	# Check and eventually starts rabbitmq-server
    if [ "$OSTYPE" = "Linux" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l)
        if [ ${instance} -eq 0 ]; then
            logger -is -t "$UPSTART_JOB" "rabbit is not running, let's try to start it .."
            #Start rabbitmq
		    $(rabbitmq-server -detached)
            if [ $? -ne 0 ]; then
                logger -is -t "$UPSTART_JOB" "ERROR: rabbitmq is not running properly (check the problem in /var/log/rabbitmq.log) "
                exit 1 
            fi
	    fi
	elif [ "$OSTYPE" == "Darwin" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l)
        if [ ${instance} -eq 0 ]; then
            logger -is -t "$UPSTART_JOB" "rabbitmq is not running, let's try to start it...."
            #Start rabbitmq
            $(rabbitmq-server -detached)
            if [ $? -eq 0 ]; then
                logger -is -t "$UPSTART_JOB" "ERROR: rabbitmq is not running properly (check the problem in /var/log/rabbitmq.log) "
                exit 1
            fi
	    fi
	fi	
end script

# Start the Open Baton Generic VNFM as a service
script
	exec java -jar ${INSTALL_DIR}/$(cat ${TMP_FILE})
end script 

post-stop script
	rm -f "${TMP_FILE}"
end script
